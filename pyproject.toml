[project]
name = "act-lens"
version = "0.1.0"
description = "actの出力をレンズで覗いて整形するCLIツール"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Hiro", email = "hiro@example.com" }
]
keywords = ["github-actions", "act", "cli", "ci", "testing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "typer>=0.12.0",
    "rich>=13.7.0",
    "pydantic>=2.0",
    "pyperclip>=1.8.0",
]

[dependency-groups]
dev = [
    "ruff>=0.0.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "bandit>=1.7.0",
    "safety>=2.0.0",
    "pre-commit>=3.0.0",
]

[project.scripts]
act-lens = "act_lens.cli:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = ["E501"]  # line too long (Ruffのフォーマッターに任せる)

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=act_lens --cov-report=term-missing"

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]  # assert使用を許可（テストで必要）
